(function (n) { var t = { romanMapSingle: { "あ": "ａ", "い": "ｉ", "う": "ｕ", "え": "ｅ", "お": "ｏ", "か": "ｋａ", "き": "ｋｉ", "く": "ｋｕ", "け": "ｋｅ", "こ": "ｋｏ", "さ": "ｓａ", "し": "ｓｉ", "す": "ｓｕ", "せ": "ｓｅ", "そ": "ｓｏ", "た": "ｔａ", "ち": "ｔｉ", "つ": "ｔｕ", "て": "ｔｅ", "と": "ｔｏ", "な": "ｎａ", "に": "ｎｉ", "ぬ": "ｎｕ", "ね": "ｎｅ", "の": "ｎｏ", "は": "ｈａ", "ひ": "ｈｉ", "ふ": "ｆｕ", "へ": "ｈｅ", "ほ": "ｈｏ", "ま": "ｍａ", "み": "ｍｉ", "む": "ｍｕ", "め": "ｍｅ", "も": "ｍｏ", "や": "ｙａ", "ゆ": "ｙｕ", "よ": "ｙｏ", "ら": "ｒａ", "り": "ｒｉ", "る": "ｒｕ", "れ": "ｒｅ", "ろ": "ｒｏ", "わ": "ｗａ", "を": "ｗｏ", "ん": "ｎｎ", "が": "ｇａ", "ぎ": "ｇｉ", "ぐ": "ｇｕ", "げ": "ｇｅ", "ご": "ｇｏ", "ざ": "ｚａ", "じ": "ｊｉ", "ず": "ｚｕ", "ぜ": "ｚｅ", "ぞ": "ｚｏ", "だ": "ｄａ", "ぢ": "ｄｉ", "づ": "ｄｕ", "で": "ｄｅ", "ど": "ｄｏ", "ば": "ｂａ", "び": "ｂｉ", "ぶ": "ｂｕ", "べ": "ｂｅ", "ぼ": "ｂｏ", "ぱ": "ｐａ", "ぴ": "ｐｉ", "ぷ": "ｐｕ", "ぺ": "ｐｅ", "ぽ": "ｐｏ", "ぁ": "ｘａ", "ぃ": "ｘｉ", "ぅ": "ｘｕ", "ぇ": "ｘｅ", "ぉ": "ｘｏ", "っ": "ｘｔｕ", "ゃ": "ｘｙａ", "ゅ": "ｘｙｕ", "ょ": "ｘｙ", "ゎ": "ｘｗａ" }, romanMapDouble: { "きゃ": "ｋｙａ", "きゅ": "ｋｙｕ", "きぇ": "ｋｙｅ", "きょ": "ｋｙｏ", "くぁ": "ｋｗａ", "しゃ": "ｓｙａ", "しゅ": "ｓｙｕ", "しぇ": "ｓｙｅ", "しょ": "ｓｙｏ", "ちゃ": "ｔｙａ", "ちゅ": "ｔｙｕ", "ちぇ": "ｔｙｅ", "ちょ": "ｔｙｏ", "てゃ": "ｔｈａ", "てぃ": "ｔｈｉ", "てゅ": "ｔｈｕ", "てぇ": "ｔｈｅ", "てょ": "ｔｈｏ", "にゃ": "ｎｙａ", "にゅ": "ｎｙｕ", "にぇ": "ｎｙｅ", "にょ": "ｎｙｏ", "ひゃ": "ｈｙａ", "ひゅ": "ｈｙｕ", "ひぇ": "ｈｙｅ", "ひょ": "ｈｙｏ", "みゃ": "ｍｙａ", "みゅ": "ｍｙｕ", "みぇ": "ｍｙｅ", "みょ": "ｍｙｏ", "りゃ": "ｒｙａ", "りゅ": "ｒｙｕ", "りぇ": "ｒｙｅ", "りょ": "ｒｙｏ", "うぃ": "ｗｉ", "うぇ": "ｗｅ", "ぎゃ": "ｇｙａ", "ぎゅ": "ｇｙｕ", "ぎぇ": "ｇｙｅ", "ぎょ": "ｇｙｏ", "じゃ": "ｊａ", "じゅ": "ｊｕ", "じぇ": "ｊｅ", "じょ": "ｊｏ", "ぢゃ": "ｄｙａ", "ぢゅ": "ｄｙｕ", "ぢぇ": "ｄｙｅ", "ぢょ": "ｄｙｏ", "びゃ": "ｂｙａ", "びゅ": "ｂｙｕ", "びぇ": "ｂｙｅ", "びょ": "ｂｙｏ", "ぴゃ": "ｐｙａ", "ぴゅ": "ｐｙｕ", "ぴぇ": "ｐｙｅ", "ぴょ": "ｐｙｏ" }, romanReverseMapSingle: {}, romanReverseMapDouble: {}, romanReverseMapTriple: {}, kanaMap: { "ア": "あ", "イ": "い", "ウ": "う", "エ": "え", "オ": "お", "カ": "か", "キ": "き", "ク": "く", "ケ": "け", "コ": "こ", "サ": "さ", "シ": "し", "ス": "す", "セ": "せ", "ソ": "そ", "タ": "た", "チ": "ち", "ツ": "つ", "テ": "て", "ト": "と", "ナ": "な", "ニ": "に", "ヌ": "ぬ", "ネ": "ね", "ノ": "の", "ハ": "は", "ヒ": "ひ", "フ": "ふ", "ヘ": "へ", "ホ": "ほ", "マ": "ま", "ミ": "み", "ム": "む", "メ": "め", "モ": "も", "ヤ": "や", "ユ": "ゆ", "ヨ": "よ", "ラ": "ら", "リ": "り", "ル": "る", "レ": "れ", "ロ": "ろ", "ワ": "わ", "ヲ": "を", "ン": "ん", "ガ": "が", "ギ": "ぎ", "グ": "ぐ", "ゲ": "げ", "ゴ": "ご", "ザ": "ざ", "ジ": "じ", "ズ": "ず", "ゼ": "ぜ", "ゾ": "ぞ", "ダ": "だ", "ヂ": "ぢ", "ヅ": "づ", "デ": "で", "ド": "ど", "バ": "ば", "ビ": "び", "ブ": "ぶ", "ベ": "べ", "ボ": "ぼ", "パ": "ぱ", "ピ": "ぴ", "プ": "ぷ", "ペ": "ぺ", "ポ": "ぽ", "ァ": "ぁ", "ィ": "ぃ", "ゥ": "ぅ", "ェ": "ぇ", "ォ": "ぉ", "ッ": "っ", "ャ": "ゃ", "ュ": "ゅ", "ョ": "ょ", "ヮ": "ゎ" }, hiraMap: {}, asciiChars: " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSYUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", numChars: "０１２３４５６７８９，．", continueChars: "ー…‥・・", startChars: "”（＜［「｛", endChars: "、。　”）＞］」｝ ", opt: { inputSpeed: 60, convertSpeed: 120, autoStart: !0, cursorStr: "|", cursorInterval: 500, hideCursor: !1, leaveCursor: !1 } }, e = document, u = function (t, i) { var r = n(e.createElement(t)); return !i || r.attr("class", i), r }, r, i, f; for (r in t.romanMapSingle) { i = t.romanMapSingle[r]; switch (i.length) { case 1: t.romanReverseMapSingle[i] = r; break; case 2: t.romanReverseMapDouble[i] = r; break; case 3: t.romanReverseMapTriple[i] = r } } for (r in t.romanMapDouble) { i = t.romanMapDouble[r]; switch (i.length) { case 1: t.romanReverseMapSingle[i] = r; break; case 2: t.romanReverseMapDouble[i] = r; break; case 3: t.romanReverseMapTriple[i] = r } } for (f in t.kanaMap) t.hiraMap[t.kanaMap[f]] = f; t.Char = function (n, t, i, r, f) { this.origin = t; this.ruby = i; this.roman = r; this.isKana = !!f; this.play = function () { var t = this, i = t.holder.text(); switch (t.status) { case 0: i == t.roman.substr(0, t.roman.length - 1) ? (t.status = 1, t.play()) : (t.holder.append(this.roman.substr(i.length, 1)), setTimeout(function () { t.play() }, n.inputSpeed)); break; case 1: t.holder.empty().append(t.ruby); t.status = 2; setTimeout(function () { t.play() }, n.inputSpeed); break; case 2: i == t.origin ? (t.status = 3, t.play()) : (t.holder.empty().append(t.origin), t.status = 3, setTimeout(function () { t.play() }, n.inputSpeed)); break; case 3: t.holder.before(i).remove(); t.word.next() } }; this.start = function () { this.holder = u("span"); this.status = 0; this.roman || (this.status = 1); this.ruby || (this.status = 2); this.word.holder.append(this.holder); this.play() }; this.next = function () { this.index++; this.play() }; this.toString = function () { var n = this.origin; return !this.ruby || (n += "(" + this.ruby + ")"), !this.roman || (n += "[" + this.roman + "]"), n } }; t.Word = function (t, i) { this.parent = n(i); this.chars = []; this.origin = ""; this.index = 0; this.status = 0; this.add = function (n) { this.chars.push(n); n.word = this; this.origin += n.origin; n.isKana && (n.origin = n.ruby) }; this.append = function (n) { for (var t = 0; t < n.chars.length; t++)this.add(n.chars[t]) }; this.clear = function () { this.parent.empty(); this.index = 0; this.status = 0 }; this.play = function () { var n = this, i; if (n.index >= n.chars.length) { i = n.holder.text(); i == n.origin && (n.status = 1); switch (n.status) { case 0: n.holder.text(n.origin).removeClass("jaticker-input").addClass("jaticker-convert"); n.status = 1; setTimeout(function () { n.play() }, t.convertSpeed); break; case 1: n.holder.before(i).remove(); setTimeout(function () { !n.block || n.block.next() }, t.convertSpeed) } } else n.chars[n.index].start() }; this.start = function () { this.holder = u("span", "jaticker-input"); this.parent.length > 0 ? (t.cursor.before(this.parent), this.parent.append(this.holder)) : t.cursor.before(this.holder); this.play() }; this.next = function () { this.index++; this.play() }; this.toString = function () { var t = this.origin, n; for (t += "<", n = 0; n < this.chars.length; n++)t += this.chars[n].toString(); return t + ">" } }; t.Block = function (i, r, u) { var f = this; this.wrapper = n(r); this.parent = n(u); this.children = []; this.index = 0; this.initialized = !1; this.add = function (n) { n.block = this; this.children.push(n) }; this.wrapper.contents().each(function () { var o = n(this), e, r; switch (o[0].nodeType) { case 1: if (o[0].tagName == "RUBY") for (e = t.parseRuby(i, o, u), r = 0; r < e.length; r++)f.add(e[r]); else f.add(new t.Block(i, o, this)); break; case 3: for (e = t.parseText(i, o.text(), u), r = 0; r < e.length; r++)f.add(e[r]) } }); this.clear = function () { this.parent.empty(); this.wrapper.empty(); this.index = 0; for (var n = 0; n < this.children.length; n++)this.children[n].clear() }; this.play = function () { if (this.index >= this.children.length) { this.block ? this.block.next() : (i.leaveCursor && (clearInterval(i.cursorId), i.cursor.remove()), !i.onFinished || i.onFinished()); return } this.children[this.index].start(!0) }; this.start = function (n) { this.initialized || (n || (this.wrapper.append(i.cursor), i.hideCursor || (i.cursorId = setInterval(function () { switch (i.cursor.css("visibility")) { case "hidden": i.cursor.css("visibility", "visible"); break; case "visible": i.cursor.css("visibility", "hidden") } }, i.cursorInterval)), this.initialized = !0), this.parent.length > 0 ? (i.cursor.before(this.parent), this.parent.append(this.holder)) : i.cursor.before(this.holder), this.play()) }; this.next = function () { this.index++; this.play() }; this.toString = function () { var t = "", n; for (this.parent.length > 0 && (t += "[" + this.parent[0].tagName + "]"), n = 0; n < this.children.length; n++)t += this.children[n].toString() + "\n"; return t } }; t.parseText = function (n, r, u) { var o, e, v; r = r.replace(/^[\n\t ]+/, " ").replace(/[\n\t ]+$/, " "); var y = [], c = "", a = null; for (o = 0; o < r.length; o++) { var f = r.charAt(o), l = o < r.length - 1 ? r.charAt(o + 1) : "", h = !!t.kanaMap[f], p = !!t.kanaMap[l], w = !!t.hiraMap[f], b = !!t.hiraMap[l], s = testChars = undefined; if (h ? (s = t.kanaMap[f], p && (testChars = t.kanaMap[f] + t.kanaMap[l])) : w && (s = f, b && (testChars = f + l)), e = origin = ruby = i = type = undefined, s != "っ" || !testChars || (origin = f, i = t.romanMapSingle[testChars.substr(1, 1)], !i || (ruby = s, i = i.substr(0, 1) + i.substr(0, 1), e = new t.Char(n, origin, ruby, i, h))), e || !testChars || (origin = f + l, i = t.romanMapDouble[testChars], !i || (ruby = testChars, e = new t.Char(n, origin, ruby, i, h), o++)), e || !s || (origin = f, i = t.romanMapSingle[s], !i || (ruby = s, e = new t.Char(n, origin, ruby, i, h))), e || (origin = f, i = undefined, ruby = undefined, e = new t.Char(n, origin, ruby, i, h)), v = !1, h) type = "kana"; else if (w) type = "hira"; else if (t.asciiChars.indexOf(f) >= 0) type = "ascii"; else if (t.numChars.indexOf(f) >= 0) type = "num"; else if (t.continueChars.indexOf(f) >= 0 || t.endChars.indexOf(f) >= 0) { switch (c) { case "kana": case "hira": type = c; break; default: type = "other" }t.endChars.indexOf(f) >= 0 && (v = !0) } else type = t.startChars.indexOf(f) >= 0 ? p ? "kana" : b ? "hira" : "other" : "other"; type != c && (a = new t.Word(n, u), y.push(a), c = type); a.add(e); v && (c = "") } return y }; t.parseRuby = function (i, r, u) { var e = [], f = ruby = undefined; return r.contents().each(function () { var r = n(this), o, s, h; if (r[0].nodeType == 3 || r[0].tagName == "RB" ? f = r.text() : r[0].tagName == "RT" && (ruby = r.text()), !!f && !!ruby) { for (o = t.parseText(i, ruby, u), s = o[0], h = 1; h < o.length; h++)s.append(o[h]); s.origin = f; e.push(s); f = ruby = undefined } }), e }; n.fn.jaticker = function (i) { return this.each(function () { var r = n.extend({}, t.opt, i == undefined ? {} : i), f; r.cursor = u("span", "jaticker-cursor").text(r.cursorStr).css("visibility", "hidden"); r.hideCursor && r.cursor.hide(); f = new t.Block(r, this); n(this).data("jaticker", f); f.clear(); r.autoStart && f.start() }) }; n.fn.jatickerStart = function () { return this.each(function () { var t = n(this).data("jaticker"); !t || t.start() }) } })(jQuery)